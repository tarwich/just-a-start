services:
  postgres:
    image: postgres:14
    env_file:
      - .env.example
    volumes:
      - ./docker/data/postgres:/var/lib/postgresql/data
    # ports:
    #   - "5432:5432"
  adminer:
    image: adminer
    depends_on:
      - postgres
    # ports:
    #   - 8080:8080
  hasura:
    image: hasura/graphql-engine
    depends_on:
      - postgres
    # ports:
    #   - "8080:8080"
    volumes:
      - ./docker/data/hasura:/hasura
    environment:
      ## Postgres database to store Hasura metadata
      # HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
      ## This env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      # PG_DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
      ## Enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true' # set to "false" to disable console
      ## Enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## Uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## Uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: password
